{"version":3,"sources":["transformFile.mjs"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport once from 'call-once-fn';\nimport getTS from 'get-tsconfig-compat';\nimport mkdirp from 'mkdirp';\nimport Queue from 'queue-cb';\n\nimport regexDependencies from './lib/regexDependencies.mjs';\nimport transformSync from './transformSync.cjs';\n\nconst regexESM = regexDependencies(true);\nconst regexCJS = regexDependencies();\n\nconst importReplaceMJS = ['.js', '.ts', '.tsx', '.mts', '.mjs'];\nconst importReplaceCJS = ['.cts'];\nconst requireReplaceJS = ['.mjs', '.cjs', '.ts', '.tsx', '.mts', '.cts'];\n\nfunction makeReplacements(code, regex, extensions, extension) {\n  let matches = [];\n  let match = regex.exec(code);\n  while (match) {\n    const dependency = match[1] || match[2] || match[3] || match[4];\n    const ext = extensions.find((x) => dependency.slice(-x.length) === x);\n    if (ext) matches.push({ ext, match, dependency });\n    match = regex.exec(code);\n  }\n\n  matches = matches.reverse();\n  for (const index in matches) {\n    const match = matches[index];\n    const start = match.match.index + match.match[0].indexOf(match.dependency) + match.dependency.indexOf(match.ext);\n    code = code.substring(0, start) + extension + code.substring(start + match.ext.length);\n  }\n  return code;\n}\n\n// https://github.com/vercel/next.js/blob/20b63e13ab2631d6043277895d373aa31a1b327c/packages/next/taskfile-swc.js#L118-L125\nconst interopClientDefaultExport =\n  \"/* CJS INTEROP */ if (exports.__esModule && exports.default) { if(typeof exports.default === 'object') Object.defineProperty(exports.default, '__esModule', { value: true }); for (var key in exports) { if (key !== 'default') exports.default[key] = exports[key]; }; module.exports = exports.default; }\";\n\nfunction transformFileCallback(src, dest, type, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  if (typeof src !== 'string') throw new Error('transformFile: unexpected source');\n  if (typeof dest !== 'string') throw new Error('transformFile: unexpected destination directory');\n  if (typeof type !== 'string') throw new Error('transformFile: unexpected type');\n\n  fs.readFile(src, 'utf8', (err, contents) => {\n    if (err) return callback(err);\n    callback = once(callback);\n\n    try {\n      const cwd = options.cwd || process.cwd();\n      let config = options.confg ? options.confg : getTS.getTsconfig(path.resolve(cwd, 'tsconfig.json'));\n\n      // overrides for cjs\n      if (type === 'cjs') {\n        config = { ...config };\n        config.config = { ...(config.config || {}) };\n        config.config.compilerOptions = { ...(config.config.compilerOptions || {}) };\n        config.config.compilerOptions.module = 'CommonJS';\n        config.config.compilerOptions.target = 'ES5';\n      }\n\n      const basename = path.basename(src);\n      const output = transformSync(contents, basename, config);\n\n      // infer extension and patch .mjs imports\n      let ext = path.extname(basename);\n      if (type === 'esm') {\n        ext = importReplaceMJS.indexOf(ext) >= 0 ? '.mjs' : ext;\n        output.code = makeReplacements(output.code, regexESM, importReplaceMJS, '.mjs');\n        ext = importReplaceCJS.indexOf(ext) >= 0 ? '.cjs' : ext;\n        output.code = makeReplacements(output.code, regexESM, importReplaceCJS, '.cjs');\n      } else {\n        ext = requireReplaceJS.indexOf(ext) >= 0 ? '.js' : ext;\n        output.code = makeReplacements(output.code, regexCJS, requireReplaceJS, '.js');\n        output.code += interopClientDefaultExport;\n      }\n      const destFilePath = path.join(dest, basename.replace(/\\.[^/.]+$/, '') + ext);\n\n      mkdirp(path.dirname(destFilePath), () => {\n        const queue = new Queue();\n        queue.defer(fs.writeFile.bind(null, destFilePath, output.code, 'utf8'));\n        !options.sourceMaps || queue.defer(fs.writeFile.bind(null, `${destFilePath}.map`, output.map, 'utf8'));\n        queue.await(() => (err ? callback(err) : callback(null, destFilePath)));\n      });\n    } catch (err) {\n      callback(err);\n    }\n  });\n}\n\n/**\n * @param {string} src The source directory to traverse.\n * @param {string} dest The output directory to write the file to.\n * @param {string} type The type of transform ('esm' or 'cjs').\n * @param {{sourceMaps: boolean}} options Options to pass to swc.\n * @param {(err?: Error, destFilePath: string) =>} [callback] Optional callback returing the path to the transformed file. Uses promise if callback not provided.\n * @returns {void | Promise<string>} Optional promise returing the path to the transformed file if callback not provided.\n */\nexport default function transformFile(src, dest, type, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  options = options || {};\n\n  if (typeof callback === 'function') return transformFileCallback(src, dest, type, options, callback);\n  return new Promise((resolve, reject) => {\n    transformFileCallback(src, dest, type, options, function compileCallback(err, result) {\n      err ? reject(err) : resolve(result);\n    });\n  });\n}\n"],"names":["transformFile","regexESM","regexDependencies","regexCJS","importReplaceMJS","importReplaceCJS","requireReplaceJS","makeReplacements","code","regex","extensions","extension","dependency","match","ext","find","x","slice","length","matches","push","exec","reverse","index","start","indexOf","substring","interopClientDefaultExport","transformFileCallback","src","dest","type","options","callback","Error","fs","readFile","err","contents","once","cwd","process","config","confg","getTS","getTsconfig","path","resolve","compilerOptions","module","target","basename","output","transformSync","extname","destFilePath","join","replace","mkdirp","dirname","queue","Queue","defer","writeFile","bind","sourceMaps","map","await","Promise","reject","compileCallback","result"],"mappings":"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"}