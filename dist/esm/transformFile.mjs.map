{"version":3,"sources":["transformFile.mjs"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport once from 'call-once-fn';\nimport getTS from 'get-tsconfig-compat';\nimport mkdirp from 'mkdirp';\nimport Queue from 'queue-cb';\n\nimport regexDependencies from './lib/regexDependencies.mjs';\nimport transformSync from './transformSync.cjs';\n\nconst regexESM = regexDependencies(true);\nconst regexCJS = regexDependencies();\n\nconst importReplaceMJS = ['.js', '.ts', '.tsx', '.mts', '.mjs'];\nconst importReplaceCJS = ['.cts'];\nconst requireReplaceJS = ['.mjs', '.cjs', '.ts', '.tsx', '.mts', '.cts'];\n\nfunction makeReplacements(code, regex, extensions, extension) {\n  let matches = [];\n  let match = regex.exec(code);\n  while (match) {\n    const dependency = match[1] || match[2] || match[3] || match[4];\n    const ext = extensions.find((x) => dependency.slice(-x.length) === x);\n    if (ext) matches.push({ ext, match, dependency });\n    match = regex.exec(code);\n  }\n\n  matches = matches.reverse();\n  for (const index in matches) {\n    const match = matches[index];\n    const start = match.match.index + match.match[0].indexOf(match.dependency) + match.dependency.indexOf(match.ext);\n    code = code.substring(0, start) + extension + code.substring(start + match.ext.length);\n  }\n  return code;\n}\n\n// https://github.com/vercel/next.js/blob/20b63e13ab2631d6043277895d373aa31a1b327c/packages/next/taskfile-swc.js#L118-L125\nconst interopClientDefaultExport = \"/* CJS INTEROP */ if (exports.__esModule && exports.default) { try { Object.defineProperty(exports.default, '__esModule', { value: true }); for (var key in exports) { exports.default[key] = exports[key]; }; module.exports = exports.default; } catch (_) {} }\";\n\nfunction transformFileCallback(src, dest, type, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  if (typeof src !== 'string') throw new Error('transformFile: unexpected source');\n  if (typeof dest !== 'string') throw new Error('transformFile: unexpected destination directory');\n  if (typeof type !== 'string') throw new Error('transformFile: unexpected type');\n\n  fs.readFile(src, 'utf8', (err, contents) => {\n    if (err) return callback(err);\n    callback = once(callback);\n\n    try {\n      const cwd = options.cwd || process.cwd();\n      let config = options.confg ? options.confg : getTS.getTsconfig(path.resolve(cwd, 'tsconfig.json'));\n\n      // overrides for cjs\n      if (type === 'cjs') {\n        config = { ...config };\n        config.config = { ...(config.config || {}) };\n        config.config.compilerOptions = { ...(config.config.compilerOptions || {}) };\n        config.config.compilerOptions.module = 'CommonJS';\n        config.config.compilerOptions.target = 'ES5';\n      }\n\n      const basename = path.basename(src);\n      const output = transformSync(contents, basename, config);\n\n      // infer extension and patch .mjs imports\n      let ext = path.extname(basename);\n      if (type === 'esm') {\n        ext = importReplaceMJS.indexOf(ext) >= 0 ? '.mjs' : ext;\n        output.code = makeReplacements(output.code, regexESM, importReplaceMJS, '.mjs');\n        ext = importReplaceCJS.indexOf(ext) >= 0 ? '.cjs' : ext;\n        output.code = makeReplacements(output.code, regexESM, importReplaceCJS, '.cjs');\n      } else {\n        ext = requireReplaceJS.indexOf(ext) >= 0 ? '.js' : ext;\n        output.code = makeReplacements(output.code, regexCJS, requireReplaceJS, '.js');\n        output.code += interopClientDefaultExport;\n      }\n      const destFilePath = path.join(dest, basename.replace(/\\.[^/.]+$/, '') + ext);\n\n      mkdirp(path.dirname(destFilePath), () => {\n        const queue = new Queue();\n        queue.defer(fs.writeFile.bind(null, destFilePath, output.code, 'utf8'));\n        !options.sourceMaps || queue.defer(fs.writeFile.bind(null, `${destFilePath}.map`, output.map, 'utf8'));\n        queue.await(() => (err ? callback(err) : callback(null, destFilePath)));\n      });\n    } catch (err) {\n      callback(err);\n    }\n  });\n}\n\n/**\n * @param {string} src The source directory to traverse.\n * @param {string} dest The output directory to write the file to.\n * @param {string} type The type of transform ('esm' or 'cjs').\n * @param {{sourceMaps: boolean}} options Options to pass to swc.\n * @param {(err: Error | null, destFilePath: string) =>} [callback] Optional callback returing the path to the transformed file. Uses promise if callback not provided.\n * @returns {void | Promise<string>} Optional promise returing the path to the transformed file if callback not provided.\n */\nexport default function transformFile(src, dest, type, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  options = options || {};\n\n  if (typeof callback === 'function') return transformFileCallback(src, dest, type, options, callback);\n  return new Promise((resolve, reject) => {\n    transformFileCallback(src, dest, type, options, function compileCallback(err, result) {\n      err ? reject(err) : resolve(result);\n    });\n  });\n}\n"],"names":["fs","path","once","getTS","mkdirp","Queue","regexDependencies","transformSync","regexESM","regexCJS","importReplaceMJS","importReplaceCJS","requireReplaceJS","makeReplacements","code","regex","extensions","extension","matches","match","exec","dependency","ext","find","x","slice","length","push","reverse","index","start","indexOf","substring","interopClientDefaultExport","transformFileCallback","src","dest","type","options","callback","Error","readFile","err","contents","cwd","process","config","confg","getTsconfig","resolve","compilerOptions","module","target","basename","output","extname","destFilePath","join","replace","dirname","queue","defer","writeFile","bind","sourceMaps","map","await","transformFile","Promise","reject","compileCallback","result"],"mappings":"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"}